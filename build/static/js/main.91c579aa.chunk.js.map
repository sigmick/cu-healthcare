{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91c579aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__11tUB\",\"control\":\"ProfileForm_control__1m6SM\",\"action\":\"ProfileForm_action__AEajt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__t-IVP\",\"logo\":\"MainNavigation_logo__1IG6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2Rb-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__25fQV\"};","import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n  \n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    // optional: redirect the user\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>CU Healthcare</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add validation\n\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCSgreOwmSIuSitvY2jU-Fyhzx-InReqFg', {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      // assumption: Always succeeds!\n\n      history.replace('/');\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"7\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCSgreOwmSIuSitvY2jU-Fyhzx-InReqFg';\n    } else {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCSgreOwmSIuSitvY2jU-Fyhzx-InReqFg';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed!';\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Home Page</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          {authCtx.isLoggedIn && <HomePage />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n        <Route path='/profile'>\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to='/auth' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__l-Dq9\",\"control\":\"AuthForm_control__2Ekza\",\"actions\":\"AuthForm_actions__1hXsw\",\"toggle\":\"AuthForm_toggle__1YP1S\"};"],"sourceRoot":""}